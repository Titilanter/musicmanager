@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<MudThemeProvider Theme="@_theme" IsDarkMode="true" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        @if(NavigationManager.Uri.ToString().Contains("album") || NavigationManager.Uri.ToString().Contains("clip")){
            <MudIconButton Icon="@Icons.Material.Rounded.ArrowCircleLeft" Href="/"></MudIconButton>
        }
        <MudIcon Icon="@Icons.Material.Rounded.LogoDev" Class="ml-4"/>
        <MudSpacer/>
        <MudText Typo="Typo.h4">@PageTitle</MudText>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Material.Rounded.MusicNote" Variant="Variant.Outlined"/>

    </MudAppBar>




    <MudMainContent Class="mt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


@code{

    private MudTheme? _theme = null;
    private string PageTitle {get; set;}

    protected override void OnInitialized(){
        base.OnInitialized();

        _theme = new(){
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };

        SetPageTitleFromUrl();

        // Subscribe to location changes
        NavigationManager.LocationChanged += OnLocationChanged;
    }



     private void SetPageTitleFromUrl()
    {
        var uri = NavigationManager.Uri;
        var urlSegments = new Uri(uri).AbsolutePath.Split('/', StringSplitOptions.RemoveEmptyEntries);
        
        // Suppose que ton paramètre est le deuxième segment de l'URL par exemple
        if (urlSegments.Length > 1)
        {
            PageTitle = urlSegments[1];  // Extrait le nom de l'album ou autre paramètre d'URL
        }
        else{
            PageTitle = "Bienvenue Tifred";
        }
    }

    private void OnLocationChanged(object? sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        // Triggered every time the URL changes
        SetPageTitleFromUrl();
        StateHasChanged();  // Force the UI to refresh if necessary
    }

     // Unsubscribe from the event to prevent memory leaks
    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }


    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };
}