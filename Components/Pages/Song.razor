@page "/song/{songId:int}"
@using MusicManager.Data
@inject IDatabaseService DatabaseService

<PageTitle>@songSelectionne.nom</PageTitle>

<MudPaper Width="100%" Style="background-color:inherit;" Class="pl-4 pr-4" Elevation="0">
    <MudPaper Class="d-flex align-center" Style="background-color:inherit;" Elevation="0">
        <MudPaper Class="d-flex align-center p-3 gap-3" Style="background-color:inherit;" Outlined="true" Elevation="0" @onclick="AddFeaturing">
            <MudIcon Icon="@Icons.Material.Rounded.AddCircle"/>
            <MudText>Ajouter un featuring</MudText>
        </MudPaper>
        <MudText Class="m-4">@featurings</MudText>
        <MudPaper Class="d-flex align-center p-3 gap-3" Style="background-color:inherit;" Elevation="0">
            <MudToggleIconButton @bind-Toggled="songSelectionne.fini"
                            Icon="@Icons.Material.Rounded.Construction"
                            Color="@Color.Warning"
                            ToggledIcon="@Icons.Material.Rounded.Check"
                            ToggledColor="@Color.Success"
                            title="@(songSelectionne.fini ? "Yes" : "No")" />

            <span>Le son est @(songSelectionne.fini ? "fini" : "en cours de modifications")</span>
        </MudPaper>
        <MudSpacer/>
        <MudButton Variant="Variant.Filled" Class="p-3" Style="width:200px;" Color="@Color.Dark" @onclick="GoToClip">Clip</MudButton>
    </MudPaper>
</MudPaper>


<MudPaper Width="100%" Height="80vh" Style="background-color:inherit;" Class="p-3 d-flex" Elevation="0">
    <MudPaper Width="66vw" Style="background-color:inherit;" Elevation="0">
        <MudPaper Style="background-color:inherit;" Class="d-flex" Elevation="0">
            <MudPaper Width="50%" Style="background-color:inherit;" Elevation="0">
                <MudText Class="ml-4">Maquette :</MudText>
                <MusicManager.Components.CustomComponents.AudioListener/>
            </MudPaper>
            <MudPaper Width="50%" Style="background-color:inherit;" Elevation="0">
                <MudText Class="ml-4">Instrumentale :</MudText>
                <MusicManager.Components.CustomComponents.AudioListener/>
            </MudPaper>
        </MudPaper>

        <MudPaper Class="pl-2" Style="background-color:inherit; height:72vh; overflow:auto;" Outlined="true">
            <MudTextField T="string" Label="Notes" Text="@songSelectionne.Notes" Lines="34" AutoGrow/>
        </MudPaper>

    </MudPaper>

    <MudPaper Width="33vw" Class=" m-2 pl-2" Style="background-color:inherit; height:79vh; overflow:auto;" Outlined="true" >
        <MudTextField T="string" Label="Paroles" Text="@songSelectionne.Paroles" Lines="37" AutoGrow/>
    </MudPaper>
</MudPaper>


@code{
    [Parameter]
    public int songId {get; set;} = 1;
    private MusicManager.Data.ORM.Song songSelectionne {get; set;} = new MusicManager.Data.ORM.Song();
    private string featurings {get; set;}

    private void AddFeaturing(){
        Console.WriteLine("Feat");
    }

    private void GoToClip(){
        Console.WriteLine("Clip");
    }

    protected override async Task OnInitializedAsync(){
        if (songId > 0) {
            songSelectionne = await DatabaseService.GetSongByIdAsync(songId);
            if (songSelectionne == null) {
                Console.WriteLine($"Album avec l'ID {songId} introuvable.");
            }
            else{
                if(songSelectionne.featurings!= null){
                    featurings="Feat. " + songSelectionne.featurings;
                }
            }
        } 
        else {
            Console.WriteLine("ID de l'album invalide.");
        }
    }
}