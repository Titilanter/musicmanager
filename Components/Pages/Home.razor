@page "/"
@using MusicManager.Data
@using MusicManager.Components.CustomComponents
@inject IDatabaseService DatabaseService
@inject IDialogService DialogService


<PageTitle>MusicManager</PageTitle>

<MudPaper Width="100%" Height="90vh" Class="d-flex flex-row gap-4 justify-center" Elevation="0" Style="background-color:inherit;">
    <MudPaper Width="48%" Height="80vh" Class="d-flex align-self-center flex-column p-4" Style="background-color:inherit;">
        <MudPaper Class="d-flex flex-row align-center mb-10" Style="background-color: inherit;" Elevation="0">
            <MudText Typo="Typo.h6" Class="align-self-center">Vos albums et singles :</MudText>
            <MudSpacer/>
            <MudIconButton Icon="@Icons.Material.Rounded.AddCircle" @onclick="CreateAlbum" Class="align-self-center"/>
        </MudPaper>
        <MusicManager.Components.CustomComponents.AlbumGrid typeGrid="albums"/>
    </MudPaper>

    <MudImage Src="images/lineVertical.png" ObjectFit="ObjectFit.Contain" Class="align-self-center" Style="height:80%;"/>

    <MudPaper Width="48%" Height="80vh" Class="d-flex align-self-center flex-column p-4" Style="background-color:inherit;">
        <MudPaper Class="d-flex flex-row align-center mb-10" Style="background-color: inherit;" Elevation="0">
            <MudText Typo="Typo.h6" Class="align-self-center">Vos clips :</MudText>
            <MudSpacer/>
            <MudIconButton Icon="@Icons.Material.Rounded.AddCircle" @onclick="CreateClip" Class="align-self-center"/>
        </MudPaper>
        <MusicManager.Components.CustomComponents.AlbumGrid typeGrid="clips"/>
    </MudPaper>

</MudPaper>

@code{


    private IEnumerable<MusicManager.Data.ORM.Album> albums = new List<MusicManager.Data.ORM.Album>();

    @* protected override async Task OnInitializedAsync()
    {
        albums = await AlbumService.GetAlbumsAsync();
    } *@

    private async Task CreateAlbum(){
        Console.WriteLine("CreateAlbum");
        albums = await DatabaseService.GetAllAlbumsAsync();

        foreach(MusicManager.Data.ORM.Album album in albums){
            Console.WriteLine(album);
        }

        var parameters = new DialogParameters();
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Small, FullWidth = true };
        var dialog = DialogService.Show<AddAlbumModal>("Ajouter un album", parameters, options);
        
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            // Actualiser les albums ou ajouter une logique supplémentaire après ajout
            Console.WriteLine("Album ajouté avec succès.");
            albums = await DatabaseService.GetAllAlbumsAsync();
        }

    }

    private void CreateClip(){
        Console.WriteLine("CreateClip");
    }
}
